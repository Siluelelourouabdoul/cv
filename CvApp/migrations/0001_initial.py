# Generated by Django 4.2.7 on 2025-01-26 18:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Competence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("competence", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ExperienceProfessionnelle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job_titre", models.CharField(max_length=255)),
                ("entreprise", models.CharField(max_length=255)),
                ("localite", models.CharField(max_length=255, null=True)),
                ("periode", models.CharField(max_length=50)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Formation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("etablissement", models.CharField(max_length=255)),
                ("diplome", models.CharField(max_length=255)),
                ("periode", models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name="Langue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("langue", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Loisir",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loisirs", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ModelCv",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.CharField(max_length=5)),
                ("photo", models.ImageField(upload_to="cv/")),
            ],
        ),
        migrations.CreateModel(
            name="Personne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("nom", models.CharField(max_length=30)),
                ("prenom", models.CharField(max_length=30)),
                ("telephone", models.CharField(max_length=30, unique=True)),
                ("adresse", models.CharField(max_length=200)),
                ("photo", models.ImageField(upload_to="photos/")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cv",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("poste", models.CharField(default=None, max_length=225)),
                ("description", models.TextField(default=None)),
                ("photo", models.ImageField(null=True, upload_to="PhotoCv/")),
                ("terminer", models.BooleanField(default=False)),
                (
                    "competences",
                    models.ManyToManyField(blank=True, to="CvApp.competence"),
                ),
                (
                    "experiences",
                    models.ManyToManyField(
                        blank=True, to="CvApp.experienceprofessionnelle"
                    ),
                ),
                (
                    "formations",
                    models.ManyToManyField(blank=True, to="CvApp.formation"),
                ),
                ("langues", models.ManyToManyField(blank=True, to="CvApp.langue")),
                ("loisirs", models.ManyToManyField(blank=True, to="CvApp.loisir")),
                (
                    "modele",
                    models.ForeignKey(
                        default=0,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="CvApp.modelcv",
                    ),
                ),
                (
                    "personne",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
